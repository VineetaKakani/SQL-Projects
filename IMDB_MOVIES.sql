CREATE DATABASE IMDBMOVIES
USE IMDBMOVIES


/* Q1. Print all movie titles and release year for all Marvel Studios movies? */
SELECT TITLE, RELEASE_YEAR, STUDIO FROM MOVIES
WHERE STUDIO LIKE "MARVEL STUDIOS"

/* Q2. Print all movies that have Avenger in their name? */
SELECT TITLE, RELEASE_YEAR, STUDIO FROM MOVIES
WHERE TITLE LIKE "%AVENGER%"

/* Q3. Print the year in which “The Godfather” movie was released? */
SELECT TITLE, RELEASE_YEAR, STUDIO, INDUSTRY FROM MOVIES
WHERE TITLE LIKE "THE GODFATHER"

/* Q4. Print all distinct movie studios in Bollywood industry? */
SELECT DISTINCT STUDIO, TITLE, RELEASE_YEAR, INDUSTRY FROM MOVIES
WHERE INDUSTRY LIKE "BOLLYWOOD"

/* Q5. Print all movies in the order of their release year (latest first) ?
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO FROM MOVIES
ORDER BY RELEASE_YEAR DESC

/* Q6. Print all movies released in the year 2022? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO FROM MOVIES
WHERE RELEASE_YEAR = 2022

/* Q7. Print all the movies released after 2020? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO FROM MOVIES
WHERE RELEASE_YEAR > 2020

/* Q8. Print all movies after the year 2020 that have more than 8 rating? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO, IMDB_RATING FROM MOVIES
WHERE RELEASE_YEAR > 2020 AND IMDB_RATING > 8

/* Q9.Select all movies that are by Marvel studios and Hombale Films? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO, IMDB_RATING FROM MOVIES
WHERE STUDIO IN ("MARVEL STUDIOS", "HOMABLE FILMS")

/* Q10. Select all THOR movies by their release year? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO, IMDB_RATING FROM MOVIES
WHERE TITLE LIKE "%THOR%"
ORDER BY RELEASE_YEAR DESC

/* Q11. Select all movies that are not from Marvel Studios? */
SELECT TITLE, RELEASE_YEAR, INDUSTRY, STUDIO FROM MOVIES
WHERE STUDIO!= "MARVEL STUDIOS"

/* Q12. Find the total number of movies released each year? */
SELECT COUNT(TITLE) AS NO_MOVIES, RELEASE_YEAR FROM MOVIES
GROUP BY RELEASE_YEAR
ORDER BY RELEASE_YEAR ASC

/* Q13. Find the total number of bollywood movies in the list */
SELECT COUNT(TITLE) AS NO_MOVIES, INDUSTRY FROM MOVIES
WHERE INDUSTRY="BOLLYWOOD"
GROUP BY INDUSTRY

/* Q14. Print the top 3 movies have more than 9 rating? */
SELECT TITLE, INDUSTRY, RELEASE_YEAR, IMDB_RATING, STUDIO FROM MOVIES
WHERE IMDB_RATING > 9
LIMIT 3

/* Q15. Print the top 5 movies have more than 350 budget? */
SELECT MOVIES.TITLE, MOVIES.INDUSTRY, MOVIES.RELEASE_YEAR, FINANCIALS.BUDGET FROM MOVIES
JOIN FINANCIALS ON MOVIES.MOVIE_ID = FINANCIALS.MOVIE_ID
WHERE BUDGET > 350
LIMIT 5

/* Q16. Print all the movies from 2019 to 2022 */
SELECT TITLE, INDUSTRY, RELEASE_YEAR, IMDB_RATING, STUDIO FROM MOVIES
WHERE RELEASE_YEAR BETWEEN "2019" AND "2022"
ORDER BY RELEASE_YEAR DESC

/* Q17. Print the max and min movie release year? */
SELECT MAX(RELEASE_YEAR) AS MAX_MOVIES, MIN(RELEASE_YEAR) AS MIN_MOVIES FROM MOVIES

/* Q18. What are the 3 highest revenue movies from 2019 to 2022 in USD? */
SELECT MOVIES.TITLE, MOVIES.RELEASE_YEAR, FINANCIALS.REVENUE, FINANCIALS.currency, MOVIES.STUDIO, MOVIES.IMDB_RATING FROM MOVIES
JOIN FINANCIALS ON MOVIES.MOVIE_ID = FINANCIALS.MOVIE_ID
WHERE RELEASE_YEAR BETWEEN "2019" AND "2022" AND CURRENCY LIKE "USD"
ORDER BY REVENUE DESC
LIMIT 3

/* Q19. What is the highest revenue movies of Bollywood for the years 2019, 2020, 2021 and 2022 and display for each year, starting with lastest year?
Print movie name, unt, currency, revenue, imdbrating, release year and studio. */
SELECT FINANCIALS.REVENUE, FINANCIALS.UNIT, FINANCIALS.CURRENCY, MOVIES.TITLE, MOVIES.INDUSTRY, MOVIES.RELEASE_YEAR, MOVIES.IMDB_RATING FROM FINANCIALS
JOIN MOVIES ON MOVIES.MOVIE_ID = FINANCIALS.MOVIE_ID
WHERE INDUSTRY = 'BOLLYWOOD' AND RELEASE_YEAR BETWEEN '2019' AND '2022'
GROUP BY REVENUE
ORDER BY UNIT ASC

/* Q20. Print profit and profit % for all the movies? */
SELECT *, (REVENUE-BUDGET) AS PROFIT, (REVENUE-BUDGET)*100/BUDGET AS PROFIT_PRT FROM FINANCIALS
ORDER BY PROFIT DESC

/* Q21. Show all the movies with their language names */
SELECT MOVIES.TITLE, LANGUAGE.NAME AS LANGUAGE_NAME FROM LANGUAGE
JOIN MOVIES ON MOVIES.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID

/* Q22. Show all Telugu movie names (assuming you don’t know the language id for Telugu) */
SELECT MOVIES.TITLE, LANGUAGE.NAME AS LANGUAGE_NAME, MOVIES.RELEASE_YEAR FROM LANGUAGE
JOIN MOVIES ON MOVIES.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID
WHERE NAME = 'TELUGU'
ORDER BY RELEASE_YEAR ASC

/* Q23.Show the language and number of movies released in that language */
SELECT LANGUAGE.NAME, RELEASE_YEAR, COUNT(TITLE) AS NO_MOVIES FROM MOVIES
JOIN LANGUAGE ON MOVIES.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID
GROUP BY LANGUAGE.NAME
ORDER BY NO_MOVIES DESC

/* Q24.Generate a report of all Hindi movies sorted by their revenue amount in millions. Print movie name, revenue, currency, and unit. */
SELECT MOVIES.TITLE, FINANCIALS.REVENUE, FINANCIALS.CURRENCY, FINANCIALS.UNIT, MOVIES.RELEASE_YEAR, MOVIES.IMDB_RATING FROM MOVIES
JOIN FINANCIALS ON MOVIES.MOVIE_ID = FINANCIALS.MOVIE_ID
WHERE INDUSTRY = 'BOLLYWOOD' AND UNIT = 'MILLIONS'
ORDER BY REVENUE DESC 

/* Q25. Show all the movies with their language names and actors */
SELECT MOVIES.TITLE, LANGUAGE.NAME AS LANGUAGE_NAME, ACTORS.NAME FROM MOVIES
JOIN LANGUAGE ON MOVIES.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID
JOIN MOVIE_ACTOR ON MOVIES.MOVIE_ID = MOVIE_ACTOR.MOVIE_ID
JOIN ACTORS ON ACTORS.ACTOR_ID = MOVIE_ACTOR.ACTOR_ID

/* Q26. Show all the movies with their language names,actors and genre */
SELECT MOVIES.TITLE, LANGUAGE.NAME AS LANGUAGE_NAME, ACTORS.NAME, genre.genre FROM MOVIES
JOIN LANGUAGE ON MOVIES.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID
JOIN GENRE ON MOVIES.MOVIE_ID = GENRE.MOVIE_ID
JOIN MOVIE_ACTOR ON MOVIES.MOVIE_ID = MOVIE_ACTOR.MOVIE_ID
JOIN ACTORS ON ACTORS.ACTOR_ID = MOVIE_ACTOR.ACTOR_ID

/* Q27.Show the genre and number of movies based on that genre */
SELECT GENRE.GENRE, COUNT(TITLE) AS NO_MOVIES FROM MOVIES
JOIN GENRE ON MOVIES.MOVIE_ID = GENRE.MOVIE_ID
GROUP BY GENRE.GENRE
ORDER BY NO_MOVIES DESC

/* Q28. Select all the movies with minimum and maximum release year? */
SELECT TITLE, RELEASE_YEAR FROM MOVIES
WHERE RELEASE_YEAR IN (
(SELECT MAX(RELEASE_YEAR) FROM MOVIES),
(SELECT MIN(RELEASE_YEAR) FROM MOVIES)
)
ORDER BY RELEASE_YEAR DESC

/* Q29.Select all the rows from the movies table whose imdb_rating is higher than the average rating? */
SELECT TITLE, IMDB_RATING FROM MOVIES
WHERE IMDB_RATING > (SELECT AVG(IMDB_RATING) FROM MOVIES)
ORDER BY IMDB_RATING DESC

/* Q30. Select all Bollywood movies released after the year 2000 that made more than 500 million $ profit? */
WITH
X AS (SELECT * FROM MOVIES
WHERE INDUSTRY = 'BOLLYWOOD'),

Y AS (SELECT *, (REVENUE-BUDGET) AS PROFIT FROM FINANCIALS
WHERE REVENUE-BUDGET > 500 AND UNIT = 'MILLIONS')

SELECT X.TITLE, X.RELEASE_YEAR, X.IMDB_RATING, Y.PROFIT FROM X
JOIN Y ON X.MOVIE_ID = Y.MOVIE_ID
WHERE RELEASE_YEAR > 2000
ORDER BY PROFIT

/* Q31. How many movies belong to only one genre? */
WITH 
   X  AS (SELECT movie_id
         FROM   genre
         GROUP  BY movie_id
         HAVING Count(DISTINCT genre) = 1)
SELECT Count(*) AS movies_with_one_genre
FROM   X; 
-- 39 movies belong to one genre

/* Q32. What is the rank of the ‘thriller’ genre of movies among all the genres in terms of number of movies released? */
WITH 
X AS (
SELECT  GENRE, 
COUNT(MOVIE_ID) AS NO_MOVIES,
RANK() OVER(ORDER BY COUNT(MOVIE_ID) DESC) AS GENRE_RANK 
FROM GENRE
GROUP BY GENRE)

SELECT * FROM X
WHERE GENRE = 'TRILLER'

/* Q33. What is the rank of the ‘fiction’ genre of movies among all the genres in terms of number of movies released? */
WITH
X AS (
SELECT GENRE,
COUNT(MOVIE_ID) AS NO_MOVIES,
RANK() OVER(ORDER BY COUNT(MOVIE_ID) DESC) AS RANK_GENRE
FROM GENRE
GROUP BY GENRE)

SELECT * FROM X
WHERE GENRE = 'FICTION'

/* Q34. Which are the top 10 movies based on avg rating and rank them from highest to lowest? */
SELECT TITLE, RELEASE_YEAR, IMDB_RATING, INDUSTRY, STUDIO,
RANK() OVER(ORDER BY IMDB_RATING DESC) AS MOVIE_RANK FROM MOVIES
LIMIT 10

/* Q35. Which studio has produced the most number of hit movies (imdb rating > 8)? */
WITH
X AS (
SELECT STUDIO, INDUSTRY, IMDB_RATING, RELEASE_YEAR,
COUNT(MOVIE_ID) AS NO_MOVIES, 
RANK() OVER(ORDER BY COUNT(MOVIE_ID) DESC) AS MOVIE_RANK FROM MOVIES
WHERE IMDB_RATING > 8 AND STUDIO IS NOT NULL
GROUP BY STUDIO
)

SELECT * FROM X
WHERE MOVIE_RANK = '1'

/* Q36. Which columns in the movie table have null values? */
SELECT COUNT(*) AS TITLE_NULL FROM MOVIES
WHERE TITLE IS NULL;

SELECT COUNT(*) AS INDUSTRY_NULL FROM MOVIES
WHERE INDUSTRY IS NULL;

SELECT COUNT(*) AS STUDIO_NULL FROM MOVIES
WHERE STUDIO IS NULL;

SELECT COUNT(*) AS RATING_NULL FROM MOVIES
WHERE IMDB_RATING IS NULL;

SELECT COUNT(*) AS YEAR_NULL FROM MOVIES
WHERE RELEASE_YEAR IS NULL;

-- Method 2
SELECT
SUM(CASE WHEN TITLE IS NULL THEN 1 ELSE 0 END) AS TITLE_NULL,
SUM(CASE WHEN INDUSTRY IS NULL THEN 1 ELSE 0 END) AS INDUSTRY_NULL,
SUM(CASE WHEN RELEASE_YEAR IS NULL THEN 1 ELSE 0 END) AS YEAR_NULL,
SUM(CASE WHEN IMDB_RATING IS NULL THEN 1 ELSE 0 END) AS RATING_NULL,
SUM(CASE WHEN STUDIO IS NULL THEN 1 ELSE 0 END) AS STUDIO_NULL
FROM MOVIES

/* Q37. Select action movies as per imdb rating and classify them in the following category: 
			Rating > 8: Superhit movies
			Rating between 7 and 8: Hit movies
			Rating between 5 and 7: One-time-watch movies
			Rating < 5: Flop movies */
WITH
X AS (SELECT MOVIES.TITLE, MOVIES.IMDB_RATING, MOVIES.RELEASE_YEAR, GENRE. GENRE FROM MOVIES
JOIN GENRE ON MOVIES.MOVIE_ID = GENRE.MOVIE_ID
WHERE GENRE = 'ACTION')
SELECT *,
CASE WHEN IMDB_RATING > 8 THEN 'SUPERHIT'
WHEN IMDB_RATING BETWEEN 7 AND 8 THEN 'HIT'
WHEN IMDB_RATING BETWEEN 5 AND 7 THEN 'ONE-TIME-WATCH'
ELSE 'FLOP' 
END  AS RATING_CATEGORY
FROM X

/* Q38. Display all movies as per imdb rating and classify them in the following category: 
			Rating > 8: Superhit movies
			Rating between 7 and 8: Hit movies
			Rating between 5 and 7: One-time-watch movies
			Rating < 5: Flop movies */
WITH
X AS ( SELECT MOVIES.TITLE, ACTORS.NAME, MOVIES.IMDB_RATING, MOVIES.RELEASE_YEAR, GENRE.GENRE FROM MOVIES
JOIN GENRE ON MOVIES.MOVIE_ID = GENRE.MOVIE_ID
JOIN MOVIE_ACTOR ON MOVIE_ACTOR.MOVIE_ID = MOVIES.MOVIE_ID
JOIN ACTORS ON MOVIE_ACTOR.ACTOR_ID = ACTORS.ACTOR_ID
)
SELECT *, 
CASE WHEN IMDB_RATING > 8 THEN 'SUPER HIT'
WHEN IMDB_RATING BETWEEN 7 AND 8 THEN 'HIT'
WHEN IMDB_RATING BETWEEN 5 AND 7 THEN 'ONE_TIME_WATCH'
ELSE 'FLOP'
END AS RATING_CATEGORY FROM X
ORDER BY IMDB_RATING DESC




SELECT * FROM FINANCIALS
SELECT * FROM MOVIES
SELECT * FROM LANGUAGE
SELECT * FROM MOVIE_ACTOR
SELECT * FROM ACTORS
SELECT * FROM genre

